volumes:
  postgres-data: {}
  pgadmin-data: {}
  elasticsearch-data: {}

services:
  db:
    container_name: postgres_container
    image: postgres
    restart: no
    environment:
      POSTGRES_USER: kellian
      POSTGRES_PASSWORD: kellian
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./sql/:/docker-entrypoint-initdb.d/
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backendnetwork

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.15.2
    # 8.x
    environment:
      [
        "CLI_JAVA_OPTS=-Xms4g -Xmx4g",
        # "bootstrap.memory_lock=true",
        "discovery.type=single-node",
        "xpack.security.enabled=false",
        "xpack.security.enrollment.enabled=false",
      ]
    ports:
      - 9200:9200
    networks:
      - backendnetwork
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: "2.0"
        reservations:
          cpus: "1.0"

  kibana:
    image: kibana:8.15.2
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
    ports:
      - 5601:5601
    networks:
      - backendnetwork
    deploy:
      resources:
        limits:
          cpus: "2.0"
        reservations:
          cpus: "1.0"
    depends_on:
      - elasticsearch

  api:
    container_name: api
    environment:
      DATABASE_URL: postgresql://kellian:kellian@db:5432/main
      LISTEN_ADDRESS: 0.0.0.0:3000
      ELASTIC_NODE_URL: http://elasticsearch:9200
    build:
      context: .
      dockerfile: ./Dockerfile.api
    ports:
      - 3000:3000
    networks:
      - backendnetwork
    depends_on:
          - db

  webapp:
    container_name: webapp
    build:
      context: .
      dockerfile: ./Dockerfile.webapp
    ports:
      - 8080:80
    networks:
      - backendnetwork
    depends_on:
          - api

networks:
  backendnetwork:
